---
openapi: 3.0.0
info:
  title: Flask REST API
  description: An API about catalog of courses
  version: "1.0"
servers:
- url: https://virtserver.swaggerhub.com/korolb.m13/Courses/1.0
  description: SwaggerHub API Auto Mocking
- url: http://127.0.0.1:3000/api
paths:
  /courses:
    get:
      tags:
      - Courses
      summary: All courses
      operationId: requests.get
      responses:
        "200":
          description: Successfully loading courses list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
    post:
      tags:
      - Courses
      summary: Create a course
      operationId: requests.post
      parameters:
      - name: name
        in: query
        description: name of course
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: videos
        in: query
        description: count a videos of course
        required: true
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        description: Course to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/course'
        required: true
      responses:
        "201":
          description: Successfully created course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/course'
  /course/{id}:
    get:
      tags:
      - Course
      summary: Метод получения курса по id
      operationId: requests.get.id
      parameters:
      - name: id
        in: path
        description: Course_id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Course
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/course'
    put:
      tags:
      - Course
      summary: Update a course
      operationId: requests.put
      parameters:
      - name: id
        in: path
        description: course_id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: name
        in: query
        description: name of course
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: videos
        in: query
        description: count a videos of course
        required: true
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/course'
        required: true
      responses:
        "200":
          description: Successfully updated course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/course'
    delete:
      tags:
      - Course
      summary: Delete a course
      operationId: requests.delete
      parameters:
      - name: id
        in: path
        description: course_id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "202":
          description: Successfully deleted course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/course'
components:
  schemas:
    course:
      required:
      - name
      - videos
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        videos:
          type: integer
    courses:
      type: array
      items:
        $ref: '#/components/schemas/course'
